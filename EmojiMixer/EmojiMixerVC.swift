
import UIKit

class EmojiMixerVC: UIViewController {
    
    private let undoButton = UIBarButtonItem()
    private let addButton = UIBarButtonItem()
    
    private let collectionView = UICollectionView(frame: .zero, collectionViewLayout: UICollectionViewFlowLayout())
    
    let emojies = [
        // –£–ª—ã–±–∫–∏ –∏ –ª–∏—Ü–∞
        "üòÄ", "üòÇ", "üòä", "üòç", "üòú",
        // –ñ–µ—Å—Ç—ã –∏ —Ä—É–∫–∏
        "üëç", "üëé", "üëå", "üëè", "üôè",
        // –õ—é–¥–∏ –∏ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        "üíÉ", "üï∫", "üë´", "üë©‚Äç‚ù§Ô∏è‚Äçüë®", "üë®‚Äçüë©‚Äçüëß",
        // –ñ–∏–≤–æ—Ç–Ω—ã–µ –∏ –ø—Ä–∏—Ä–æ–¥–∞
        "üê∂", "üê±", "üê∞", "ü¶Å", "üêº",
        // –ï–¥–∞ –∏ –Ω–∞–ø–∏—Ç–∫–∏
        "üçè", "üçï", "üçî", "üç£", "üç´",
        // –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
        "‚úàÔ∏è", "üöó", "üöÄ", "üöÅ", "üö≤",
        // –°–∏–º–≤–æ–ª—ã –∏ –æ–±—ä–µ–∫—Ç—ã
        "üí°", "üì±", "üíª", "‚åõÔ∏è", "üîí"
    ]
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        view.addSubview(collectionView)
        
        setupNavigationBar()
        setupCollectionView()
        
    }
    
    
    // MARK: - NavigationBar
    
    private func setupNavigationBar() {
        setupNavBarItemLeft()
        setupNavBarItemRight()
        navigationController?.navigationBar.prefersLargeTitles = true
        title = "Emoji Mixer"
        
    }
    
    private func setupNavBarItemLeft() {
        let image = UIImage(systemName: "plus", withConfiguration: UIImage.SymbolConfiguration(weight: .bold))//1
        addButton.image = image
        addButton.tintColor = .black
        addButton.target = self
        addButton.action = #selector(addButtonDidTap)
        navigationItem.leftBarButtonItem = addButton
    }
    
    private func setupNavBarItemRight() {
        undoButton.title = "Undo"
        undoButton.tintColor = .black
        undoButton.target = self
        undoButton.action = #selector(undoButtonDidTap)
        navigationItem.rightBarButtonItem = undoButton
    }
    
    // MARK: - CollectionView
    
    func setupCollectionView() {
        
        //register
        collectionView.register(UICollectionViewCell.self, forCellWithReuseIdentifier: "cell")
        
        //DataSourse
        collectionView.dataSource = self
        
        setupCollectionConstraints()
    }
    
    func setupCollectionConstraints() {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ-–ª–∞–π–∞—É—Ç
            collectionView.translatesAutoresizingMaskIntoConstraints = false

            NSLayoutConstraint.activate([
                collectionView.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor),
                collectionView.bottomAnchor.constraint(equalTo: view.safeAreaLayoutGuide.bottomAnchor),
                collectionView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
                collectionView.trailingAnchor.constraint(equalTo: view.trailingAnchor)
            ])
        }
    
    // MARK: - @objc
    @objc private func addButtonDidTap() {
        print("Add tapped!")
    }
    
    @objc private func undoButtonDidTap() {
        print("Undo tapped!")
    }
    
}


// MARK: - UICollectionViewDataSource

extension EmojiMixerVC: UICollectionViewDataSource {
    
    //–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return emojies.count
    }
    
    //–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —è—á–µ–π–∫–∏
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "cell", for: indexPath)
        cell.backgroundColor = .lightGray // –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –¥–ª—è —è—á–µ–π–∫–∏
        return cell
    }
}
